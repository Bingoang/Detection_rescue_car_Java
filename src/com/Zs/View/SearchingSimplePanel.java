/*
 * SearchingSimplePanel.java
 *
 * Created on __DATE__, __TIME__
 */

package com.Zs.View;

import java.sql.Connection;
import java.sql.SQLException;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import ZsUtil.ZsUtil;

import com.Zs.DbDao.DbRecord_4ItemDao;
import com.Zs.DbUtil.DbUtil;

/**
 *
 * @author  __USER__
 */
public class SearchingSimplePanel extends javax.swing.JPanel {

	private DefaultListModel defaultListModel = new DefaultListModel();
	private DefaultListModel m = new DefaultListModel();
	DbUtil dbUtil = new DbUtil();
	DbRecord_4ItemDao dbRecord_4ItemDao = new DbRecord_4ItemDao();

	/** Creates new form SearchingSimplePanel */
	public SearchingSimplePanel() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		SearchingSimpleList = new javax.swing.JList();
		jButton1 = new javax.swing.JButton();
		WD_CheckBox = new javax.swing.JCheckBox();
		SD_CheckBox = new javax.swing.JCheckBox();
		ZA_CheckBox = new javax.swing.JCheckBox();
		All_CheckBox = new javax.swing.JCheckBox();
		XC_CheckBox = new javax.swing.JCheckBox();
		LiveBox = new javax.swing.JCheckBox();

		jLabel1.setText("\u7b80\u5355\u68c0\u7d22\u6846");

		SearchingSimpleList.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "请选择您要查询的内容" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jScrollPane1.setViewportView(SearchingSimpleList);

		jButton1.setText("\u67e5\u8be2\u8bb0\u5f55");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton1ActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		WD_CheckBox.setText("\u6e29\u5ea6");
		WD_CheckBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionPerformed(evt);
			}
		});

		SD_CheckBox.setText("\u6e7f\u5ea6");
		SD_CheckBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionPerformed(evt);
			}
		});

		ZA_CheckBox.setText("\u969c\u788d\u7269\u8ddd\u79bb");

		All_CheckBox.setSelected(true);
		All_CheckBox.setText("\u6240\u6709\u8bb0\u5f55");
		All_CheckBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionPerformed(evt);
			}
		});

		XC_CheckBox.setText("\u884c\u8f66\u8ddd\u79bb");

		LiveBox.setText("\u751f\u547d\u68c0\u6d4b");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		495,
																		Short.MAX_VALUE)
																.addContainerGap())
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										WD_CheckBox)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										SD_CheckBox)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										ZA_CheckBox)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										XC_CheckBox)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										LiveBox)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										All_CheckBox))
																				.addComponent(
																						jLabel1))
																.addGap(49, 49,
																		49))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jButton1)
																.addContainerGap(
																		426,
																		Short.MAX_VALUE)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(8, 8, 8)
								.addComponent(jLabel1)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(WD_CheckBox)
												.addComponent(SD_CheckBox)
												.addComponent(ZA_CheckBox)
												.addComponent(XC_CheckBox)
												.addComponent(LiveBox)
												.addComponent(All_CheckBox))
								.addGap(33, 33, 33)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										264, Short.MAX_VALUE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jButton1).addGap(36, 36, 36)));
	}// </editor-fold>
	//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)
			throws Exception {
		Connection con = dbUtil.getCon();
		defaultListModel.clear();
		m.clear();
		defaultListModel = this.getList(con);//得到没有时间约束的数据
		for (int i = 0; i < defaultListModel.getSize(); i++) {
			String str = (defaultListModel.get(i) + "").replaceAll("null", "");
			defaultListModel.remove(i);
			defaultListModel.add(0, str);
		}
		for (int i = 0; i < defaultListModel.getSize(); i++) {
			int length = defaultListModel.get(i).toString().length();//将10150311095447转化为2015年03月11日09时54分47秒
			String str = DbRecord_4ItemDao
					.getStringFromSqlDate(defaultListModel.get(i).toString()
							.substring(length - 14));
			m.addElement(defaultListModel.get(i).toString()
					.substring(0, length - 14)
					+ str);
		}

		//System.out.println(str6);
		this.showList(m);
		dbUtil.closeCon(con);
	}

	private DefaultListModel getList(Connection con) throws SQLException {
		DefaultListModel m = new DefaultListModel();
		m.clear();
		if (All_CheckBox.isSelected()) {
			m = dbRecord_4ItemDao.getAll(con);
		} else {
			if (WD_CheckBox.isSelected()) {
				m = ZsUtil.DftMd_Add(m,
						dbRecord_4ItemDao.getSearchingDb_(con, "Temperature"));
			}
			if (SD_CheckBox.isSelected()) {
				m = ZsUtil.DftMd_Add(m,
						dbRecord_4ItemDao.getSearchingDb_(con, "Humidity"));
			}
			if (ZA_CheckBox.isSelected()) {
				m = ZsUtil.DftMd_Add(m,
						dbRecord_4ItemDao.getSearchingDb_(con, "Barrier"));
			}
			if (XC_CheckBox.isSelected()) {
				m = ZsUtil.DftMd_Add(m, dbRecord_4ItemDao.getSearchingDb_(con,
						"RunningDistance"));
			}
			if (LiveBox.isSelected()) {
				m = ZsUtil.DftMd_Add(m,
						dbRecord_4ItemDao.getSearchingDb_(con, "Live"));
			}

		}
		return m;
	}

	private void showList(DefaultListModel SearchingExpertModel) {

		this.SearchingSimpleList.setModel(SearchingExpertModel);
		this.SearchingSimpleList = new JList(SearchingExpertModel);
		this.SearchingSimpleList.invalidate();
		this.SearchingSimpleList.repaint();
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JCheckBox All_CheckBox;
	private javax.swing.JCheckBox LiveBox;
	private javax.swing.JCheckBox SD_CheckBox;
	private javax.swing.JList SearchingSimpleList;
	private javax.swing.JCheckBox WD_CheckBox;
	private javax.swing.JCheckBox XC_CheckBox;
	private javax.swing.JCheckBox ZA_CheckBox;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

}